@page "/users";
@using BusinessLogic.Services;
@using Web;
@using BusinessLogic.ViewModels.UserModels;
@using Web.Shared.Components;
@using Web.Pages.Components;
@using static BusinessLogic.Services.UserService;
@inject IUserService _userService;


<PageTitle>Users</PageTitle>


@if (allUsers == null)
{
    <div class="spinner-1"></div>
}
else
{
    @if (allUsers.Count() == 0)
    {
        <Notice Title="У вас пока нет пользователей" />
        <button class="reset-button confirm-btn">
            <a href="@Routes.UserCreate">
                Добавить
            </a>
        </button>
    }
    else
    {
        <button class="reset-button confirm-btn">
            <a href="@Routes.UserCreate">
                Добавить
            </a>
        </button>
        <div class="users-list">
        <p>
            Количество пользователей: @allUsers.Count()
        </p>
        <div class="users-list__content">
            @foreach (UserResult user in allUsers)
            {
                <UserListCard User="@user" Index="@allUsers.IndexOf(user)" />
            }
        </div>
    </div>
    }
}




@code {
    private List<UserResult>? allUsers;


    protected override async Task OnInitializedAsync()
    {
        await Task.Run(LoadEmployees);

        var result = await _userService.GetAll();
        allUsers = result!.ToList();
        base.OnInitializedAsync();
    }



    private void LoadEmployees()
    {
        System.Threading.Thread.Sleep(1000);
    }
}
